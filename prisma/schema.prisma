generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Deal {
  id      String   @id @default(uuid()) @map("_id")
  title   String
  author  String
  date    DateTime
  image   String
}

model Article {
  id      String   @id @default(uuid()) @map("_id")
  title   String
  author  String
  date    DateTime
  image   String
}

model ProductReview {
  id       String   @id @default(uuid()) @map("_id")
  title    String
  products Product[]
}

model Product {
  id              String   @id @default(uuid()) @map("_id")
  name            String
  category        String 
  description     String
  videoReview     String?
  images          Image[]
  prices          Price[]
  pros            String[]
  cons            String[]
  technologies    Technology[]
  specifications  Specification[] 
  productReviewId String?
  productReview   ProductReview? @relation(fields: [productReviewId], references: [id])
}

model Image {
  id        String  @id @default(uuid()) @map("_id")
  src       String
  alt       String
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model Price {
  id       String  @id @default(uuid()) @map("_id")
  store    String
  storeName String
  price    String
  link     String
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model Technology {
  id        String  @id @default(uuid()) @map("_id")
  name      String
  productId String    
  product   Product @relation(fields: [productId], references: [id])
}

model Specification {
  id        String  @id @default(uuid()) @map("_id")
  key       String
  value     String
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model User {
  id             String   @id @default(uuid()) @map("_id")
  email          String   @unique
  hashedPassword String
  name           String?
  image          String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
